package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"errors"
	"time"

	"github.com/m-butterfield/social/app/data"
)

// CreateComment is the resolver for the createComment field.
func (r *mutationResolver) CreateComment(ctx context.Context, postID string, body string) (*data.Comment, error) {
	user, err := loggedInUser(ctx)
	if err != nil {
		return nil, internalError(err)
	}
	if user == nil {
		return nil, errors.New("must be logged in to comment")
	}
	comment := &data.Comment{
		PostID: postID,
		User:   user,
		Body:   body,
	}
	if err := r.DS.CreateComment(comment); err != nil {
		return nil, internalError(err)
	}
	return comment, nil
}

// GetComments is the resolver for the getComments field.
func (r *queryResolver) GetComments(ctx context.Context, postID string, before *time.Time) ([]*data.Comment, error) {
	comments, err := r.DS.GetComments(postID, before)
	if err != nil {
		return nil, internalError(err)
	}
	return comments, nil
}
